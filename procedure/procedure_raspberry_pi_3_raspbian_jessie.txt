# procedure_raspberry_pi_3_raspbian_jessie.txt

# unzip 2017-03-02-raspbian-jessie.zip
# sudo dd bs=4M if=2017-03-02-raspbian-jessie.img of=/dev/sdXXX
#   1047+1 records in
#   1047+1 records out
#    4393533440 bytes (4.4 GB) copied, 183.196 s, 24.0 MB/s
# sudo sync

# Raspberry Pi 3 Model B, PX-S1UD V2.0, PX-BCUD
# Raspbian Jessie 2017-03-02
# Linux raspberrypi 4.4.50-v7+ #970 SMP Mon Feb 20 19:18:29 GMT 2017 armv7l GNU/Linux

# -> apt-get dist-upgrade
#   -> //

# -> sudo BRANCH=next rpi-update
#   -> Linux raspberrypi 4.9.13-v7+ #974 SMP Wed Mar 1 20:09:48 GMT 2017 armv7l GNU/Linux

# sudo adduser XXX
# sudo gpasswd -a XXX sudo

/*******************************************************
cat /etc/os-release
PRETTY_NAME="Raspbian GNU/Linux 8 (jessie)"
NAME="Raspbian GNU/Linux"
VERSION_ID="8"
VERSION="8 (jessie)"
ID=raspbian
ID_LIKE=debian
HOME_URL="http://www.raspbian.org/"
SUPPORT_URL="http://www.raspbian.org/RaspbianForums"
BUG_REPORT_URL="http://www.raspbian.org/RaspbianBugs"

df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        30G  3.7G   25G  14% /
devtmpfs        459M     0  459M   0% /dev
tmpfs           463M     0  463M   0% /dev/shm
tmpfs           463M  6.3M  457M   2% /run
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           463M     0  463M   0% /sys/fs/cgroup
/dev/mmcblk0p1   63M   21M   42M  33% /boot
tmpfs            93M     0   93M   0% /run/user/1000
tmpfs            93M     0   93M   0% /run/user/1001
*******************************************************/

#*******************************************************************************************************************
# Lib
#*******************************************************************************************************************
sudo touch /etc/ld.so.conf.d/local.conf
sudo sh -c "echo '/usr/local/lib' >> /etc/ld.so.conf.d/local.conf"

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade

sudo reboot

sudo BRANCH=next rpi-update

sudo reboot

#*******************************************************************************************************************
# Web Camera (Audio)
#*******************************************************************************************************************
#cat /proc/asound/modules
sudo touch /etc/modprobe.d/alsa-base.conf
sudo sh -c "echo 'options snd slots=snd_usb_audio,snd_bcm2835' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_bcm2835 index=1' >> /etc/modprobe.d/alsa-base.conf"
sudo gpasswd -a $USER audio

#*******************************************************************************************************************
# PX-S1UD V2.0
#*******************************************************************************************************************
cd /tmp && \
    wget http://plex-net.co.jp/plex/px-s1ud/PX-S1UD_driver_Ver.1.0.1.zip && \
    unzip PX-S1UD_driver_Ver.1.0.1.zip && \
    sudo cp PX-S1UD_driver_Ver.1.0.1/x64/amd64/isdbt_rio.inp /lib/firmware/
sudo gpasswd -a $USER video

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get -y install autoconf libpcsclite-dev pcsc-tools pcscd cmake libasound2-dev

#*******************************************************************************************************************
# recdvb
#*******************************************************************************************************************
cd /tmp && \
    git clone https://github.com/k-pi/recdvb && \
    cd recdvb && \
    chmod a+x autogen.sh && \
    ./autogen.sh && \
    ./configure && \
    make -j$(nproc) && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# epgdump
#*******************************************************************************************************************
cd /tmp && \
    git clone https://github.com/Piro77/epgdump.git && \
    cd epgdump && \
    ./autogen.sh && \
    make -j$(nproc) && \
    sudo make install

#*******************************************************************************************************************
# FFmpeg
#*******************************************************************************************************************
cd /tmp && \
    wget https://ffmpeg.org/releases/ffmpeg-3.2.4.tar.bz2 && \
    tar jxvf ffmpeg-*.tar.bz2 && \
    cd ffmpeg-* && \
    ./configure --enable-static --enable-omx-rpi --enable-mmal && \
    make -j$(nproc) && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# nginx
#*******************************************************************************************************************
cd /tmp && \
    sudo apt-get -y install libpcre3-dev libpcre++-dev libssl-dev && \
    wget http://nginx.org/download/nginx-1.11.13.tar.gz && \
    tar zxvf nginx-*.tar.gz && \
    cd nginx-* && \
    ./configure --with-http_ssl_module --with-ipv6 --with-http_v2_module && \
    make -j$(nproc) && \
    sudo make install

#*******************************************************************************************************************
# MongoDB
#*******************************************************************************************************************
sudo apt-get -y install mongodb

#*******************************************************************************************************************
# chukasa
#*******************************************************************************************************************
sudo mkdir /opt/chukasa
sudo chown $USER:$USER /opt/chukasa
mkdir /opt/chukasa/video

# clone project and edit configuration file
cd /tmp
git clone https://github.com/hirooka/chukasa.git
cd chukasa
sed -i -e "s/system.recxxx-path=\/usr\/local\/bin\/recpt1/system.recxxx-path=\/usr\/local\/bin\/recdvb/g" src/main/resources/application.properties

# build chukasa application
./gradlew build
cp build/libs/chukasa-0.0.1-SNAPSHOT.jar /opt/chukasa/

sed -i -e "s/User=hirooka/User=$USER/g" ubuntu/systemd/chukasa.service
sudo cp ubuntu/systemd/chukasa.service /etc/systemd/system/
sudo systemctl enable chukasa
sudo systemctl start chukasa

sudo cp ubuntu/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf
sudo cp ubuntu/systemd/nginx.service /etc/systemd/system/
sudo systemctl enable nginx
sudo systemctl start nginx

sudo reboot

#*******************************************************************************************************************
# End Of File
#*******************************************************************************************************************